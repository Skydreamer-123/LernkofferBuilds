{"version":3,"sources":["Components/Buttons/InfotextButton.tsx","Components/Buttons/FancyButton.tsx","Components/Text/TextComponent.tsx","SDG/SDG13/Gute Bsp/SDG13_GutesBeispiel.tsx","SDGLogos/Goal-SDG13.png","App.tsx","reportWebVitals.ts","index.tsx","styles/Infotextbutton.module.css"],"names":["InfotextButton","props","style","version","backgroundColor","className","cssStyle","pushable","type","onClick","disabled","shadow","edgegreen","edge","front","buttontext","children","FancyButton","active","TextComponent","React","useState","showtext","setText","maxSlides","Object","keys","sdg","text","length","window","open","buttonBack","bottom","left","position","prevState","buttonNext","right","buttonEnd","close","sdgTitle","alt","src","logo","padding","textAlign","header","SDG13_GutesBeispiel","sdgNumber","1","2","marginTop","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mYAWaA,EAAiB,SAACC,GAC3B,IAAMC,EAA0B,UAAlBD,EAAME,QAAsB,CAAEC,gBAAiB,SAAY,GAEzE,OACI,yBAAQC,UAAWC,IAASC,SAAUC,KAAK,SAASC,QAASR,EAAMQ,QAASC,SAAUT,EAAMS,SAA5F,UACI,sBAAML,UAAWC,IAASK,SAC1B,sBAAMN,UAA6B,UAAlBJ,EAAME,QAAsBG,IAASM,UAAYN,IAASO,OAC3E,sBAAMR,UAAWC,IAASQ,MAAOZ,MAAOA,EAAxC,SACI,mBAAGG,UAAWC,IAASS,WAAvB,SAAoCd,EAAMe,iBCN7CC,EAAc,SAAChB,GAAkD,IAAD,IACnEiB,EAAM,UAAGjB,EAAMiB,cAAT,SACNf,EAAO,UAAGF,EAAME,eAAT,QAAoB,QACjC,OAAIe,EAEI,qBAAKb,UAAWJ,EAAMI,UAAtB,SACI,cAAC,EAAD,CAAgBI,QAASR,EAAMQ,QAASN,QAASA,EAAjD,SACKF,EAAMe,aAKhB,qBAAKX,UAAU,qBCfbc,EAAgB,SAAClB,GAC1B,MAA4BmB,IAAMC,SAAS,GAA3C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAYC,OAAOC,KAAKzB,EAAM0B,IAAIC,MAAMC,OAC9CC,OAAOC,KAAK,GAAI,SAEhB,IAaMC,EACF,qBAAK9B,MAAO,CAAE+B,OAAQ,OAAQC,KAAM,QAASC,SAAU,SAAvD,SACI,cAAC,EAAD,CACI1B,QAPW,WACnBc,GAAQ,SAACa,GAAD,OAAeA,EAAY,MAO3BjC,QAAQ,MACRE,UAAU,aACVa,OAAQI,EAAS,EAJrB,yBAUFe,EACF,qBAAKnC,MAAO,CAAE+B,OAAQ,OAAQK,MAAO,OAAQH,SAAU,SAAvD,SACI,cAAC,EAAD,CACI1B,QAvBW,WACnBc,GAAQ,SAACa,GAAD,OAAeA,EAAY,MAuB3BjC,QAAQ,QACRE,UAAU,aACVa,OAAQI,EAAWE,EAJvB,sBAiBFe,EAEE,qBAAKrC,MAAO,CAAG+B,OAAQ,OAAQK,MAAO,OAAQH,SAAU,SAAxD,SACI,cAAC,EAAD,CACI1B,QATU,WAEtBqB,OAAOC,KAAK,GAAI,SAChBD,OAAOU,SAOKrC,QAAQ,QACRE,UAAU,aACVa,OAAQI,IAAaE,EAJzB,uBAWZ,OACI,qCACI,qBAAKnB,UAAS,iBAAYJ,EAAM0B,IAAIA,IAAtB,WAAd,SACI,sBAAKtB,UAAU,SAAf,UACKJ,EAAM0B,IAAIc,SADf,IACyB,qBAAKpC,UAAU,UAAUqC,IAAI,OAAOC,IAAK1C,EAAM0B,IAAIiB,YAGhF,sBAAK1C,MAjEiB,CAC9B2C,QAAS,MACTC,UAAW,UA+DH,UACI,mBAAGzC,UAAU,aAAb,SACI,4BAAIJ,EAAM0B,IAAIoB,OAAOzB,OACpB,IACL,uBACA,mBAAGjB,UAAU,WAAb,SACI,4BAAIJ,EAAM0B,IAAIC,KAAKN,OAClB,OAERU,EACAK,EACAE,MCnFAS,EAAiC,CAC1CC,UAAW,GACXR,SAAU,2BACVd,IAAK,QACLiB,KCZW,IAA0B,uCDarCG,OAAQ,CACJG,EAAG,cACHC,EAAG,cAIPvB,KAAM,CACFsB,EACI,8BACI,+BACI,+BACK,IADL,uGAKA,qBAAIhD,MAAO,CAAEkD,UAAW,OAAxB,UACK,IADL,wHAKA,qBAAIlD,MAAO,CAAEkD,UAAW,OAAxB,UACK,IADL,gVAMA,+BACK,IADL,uGAKA,oBAAIlD,MAAO,CAAEkD,UAAW,OAAxB,qHAIZD,EACI,ydECCE,EAAM,WAEf,OADAvB,OAAOC,KAAK,GAAI,SAEZ,cAAC,IAAD,CAAYuB,SAAS,GAArB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,CAAe7B,IAAKqB,WCzC3CS,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACA,cAAC,EAAD,QAIJC,SAASC,eAAe,SAM5Bb,K,kBCpBAc,EAAOC,QAAU,CAAC,SAAW,iCAAiC,OAAS,+BAA+B,KAAO,6BAA6B,UAAY,kCAAkC,WAAa,mCAAmC,MAAQ,8BAA8B,WAAa,sC","file":"static/js/main.4bc8fa37.chunk.js","sourcesContent":["// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\nimport React from \"react\";\r\nimport cssStyle from \"../../styles/Infotextbutton.module.css\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n    version: \"green\" | \"red\";\r\n}\r\n\r\nexport const InfotextButton = (props: React.PropsWithChildren<Props>): JSX.Element => {\r\n    const style = props.version === \"green\" ? { backgroundColor: \"green\" } : {};\r\n\r\n    return (\r\n        <button className={cssStyle.pushable} type=\"button\" onClick={props.onClick} disabled={props.disabled}>\r\n            <span className={cssStyle.shadow} />\r\n            <span className={props.version === \"green\" ? cssStyle.edgegreen : cssStyle.edge} />\r\n            <span className={cssStyle.front} style={style}>\r\n                <p className={cssStyle.buttontext}>{props.children}</p>\r\n            </span>\r\n        </button>\r\n    );\r\n};","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\n\r\nimport React, { PropsWithChildren } from \"react\";\r\nimport { InfotextButton } from \"./InfotextButton\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    active?: boolean;\r\n    version?: \"green\" | \"red\";\r\n    className?: string;\r\n}\r\n\r\nexport const FancyButton = (props: PropsWithChildren<Props>): JSX.Element => {\r\n    const active = props.active ?? true;\r\n    const version = props.version ?? \"green\";\r\n    if (active) {\r\n        return (\r\n            <div className={props.className}>\r\n                <InfotextButton onClick={props.onClick} version={version}>\r\n                    {props.children}\r\n                </InfotextButton>\r\n            </div>\r\n        );\r\n    }\r\n    return <div className=\"buttonInvisible\" />;\r\n};","import { CSSProperties } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextProps } from \"../../Interfaces/SDG\";\r\nimport { FancyButton } from \"../Buttons/FancyButton\";\r\n\r\ninterface Props {\r\n    sdg: TextProps;\r\n}\r\n\r\nexport const TextComponent = (props: Props): JSX.Element => {\r\n    const [showtext, setText] = React.useState(1);\r\n    const maxSlides = Object.keys(props.sdg.text).length;\r\n    window.open(\"\", '_self' )\r\n\r\n    const textBox:CSSProperties = {\r\n    padding: \"4vw\",\r\n    textAlign: \"center\",\r\n    };\r\n\r\n    const incrementCount = (): void => {\r\n        setText((prevState) => prevState + 1);\r\n    };\r\n\r\n    const decrementCount = (): void => {\r\n        setText((prevState) => prevState - 1);\r\n    };\r\n\r\n    const buttonBack = (\r\n        <div style={{ bottom: \"38px\", left: \"-38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={decrementCount}\r\n                version=\"red\"\r\n                className=\"backbutton\"\r\n                active={showtext>1}\r\n            >\r\n                Zur√ºck\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n    const buttonNext = (\r\n        <div style={{ bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={incrementCount}\r\n                version=\"green\"\r\n                className=\"nextbutton\"\r\n                active={showtext < maxSlides}\r\n            >\r\n                Weiter\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n \r\n    // eslint-disable-next-line unicorn/consistent-function-scoping\r\n     const buttonEndClicked = (): void => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        window.open(\"\", '_self' )\r\n        window.close();\r\n    }\r\n    const buttonEnd = (\r\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n            <div style={{  bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n                <FancyButton\r\n                    onClick={buttonEndClicked}\r\n                    version=\"green\"\r\n                    className=\"nextbutton\"\r\n                    active={showtext === maxSlides}\r\n                >\r\n                    Beenden\r\n                </FancyButton>\r\n            </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={`colour_${props.sdg.sdg}_header`}>\r\n                <div className=\"header\">\r\n                    {props.sdg.sdgTitle} <img className=\"sdglogo\" alt=\"logo\" src={props.sdg.logo} />\r\n                </div>\r\n            </div>\r\n            <div style = {textBox}>\r\n                <p className=\"headertext\">\r\n                    <b>{props.sdg.header[showtext]}</b>\r\n                </p>{\" \"}\r\n                <br />\r\n                <p className=\"texttext\">\r\n                    <p>{props.sdg.text[showtext]}</p>\r\n                </p>{\" \"}\r\n            </div>\r\n            {buttonBack}\r\n            {buttonNext}\r\n            {buttonEnd}\r\n            \r\n        </>\r\n\r\n    );\r\n};\r\n","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable unicorn/filename-case */\r\n// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/react-in-jsx-scope */\r\n\r\nimport { TextProps } from \"../../../Interfaces/SDG\";\r\nimport Logo from \"../../../SDGLogos/Goal-SDG13.png\";\r\n\r\nexport const SDG13_GutesBeispiel: TextProps = {\r\n    sdgNumber: 13,\r\n    sdgTitle: \"Domino Umweltschutzkette\",\r\n    sdg: \"SDG13\",\r\n    logo: Logo,\r\n    header: {\r\n        1: \"Tutorial:  \",\r\n        2: \" Tutorial:\",\r\n       \r\n    },\r\n\r\n    text: {\r\n        1: (\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        {\" \"}\r\n                        Hier haben wir ein gern gespieltes Spiel, vielleicht kennst du es ja schon: Es nennt sich\r\n                        Domino.\r\n                    </li>\r\n                    <li style={{ marginTop: \"3vh\" }}>\r\n                        {\" \"}\r\n                        In dieser Version geht es um Dinge, die die Umwelt belasten und auch gleichzeitig darum, was du\r\n                        selbst tun kannst.\r\n                    </li>\r\n                    <li style={{ marginTop: \"3vh\" }}>\r\n                        {\" \"}\r\n                        Dieses Spiel funktioniert nach einem einfachen Prinzip: Gestartet wird mit der Karte, auf der\r\n                        ‚ÄûStart‚Äú steht. Auf der rechten Seite von dieser Karte findet ihr ein Bild. Jetzt k√∂nnt ihr euch\r\n                        die √ºbrigen Karten ansehen und √ºberlegen, welcher Text passend zu diesem Bild ein Problem und seine L√∂sung beschreibt.\r\n                    </li>\r\n                    <li>\r\n                        {\" \"}\r\n                        Wenn du eine Karte findest, die zu dem Bild passt, dann ziehe diese Karte einfach neben das\r\n                        Bild.\r\n                    </li>\r\n                    <li style={{ marginTop: \"3vh\" }}> So machst du immer weiter und am Ende kommst du bei der Karte an, auf der ‚ÄûEnde‚Äú steht.</li>\r\n                </ul>\r\n            </div>\r\n        ),\r\n        2: (\r\n            <div>\r\n                Ihr k√∂nnt immer gerne Pausen machen, um √ºber die angegebenen Probleme und L√∂sungen reden. Diskutiert ob L√∂sungen f√ºr euch und eure Freunde, Familie umsetzbar sind. Eine andere Idee\r\n                w√§re, dar√ºber zu diskutieren, ob euch andere Aspekte einfallen, die entweder schlecht f√ºr die Umwelt\r\n                sind und wie man sie l√∂sen k√∂nnte, oder auch, wie man die bereits angegebenen Probleme anders l√∂sen kann,\r\n                als hier steht.\r\n            </div>\r\n        ),\r\n    },\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Goal-SDG13.a5a81d4d.png\";","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from \"react\";\r\nimport { HashRouter , Route, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./home\";\r\n\r\n\r\n\r\n/**----------------------------------------------------------------------------\r\n *                              Style sheets\r\n ----------------------------------------------------------------------------*/\r\nimport \"./styles/App.css\";\r\nimport \"./styles/colour_sdgs.css\";\r\nimport \"./styles/infotext.css\";\r\n// the next lines caused a mental breakdown. FUCK THIS SHIT \r\nimport \"./styles/sdg13.css\";\r\nimport \"./styles/sdg14.css\";\r\nimport \"./SDG/SDG1/Spiel/sdg1.css\"\r\n\r\n\r\n/**----------------------------------------------------------------------------\r\n *                                SDG 13\r\n * --------------------------------------------------------------------------*/\r\n/**                              Freie Arbeit                                */\r\nimport { SDG13_FreieArbeit } from \"./SDG/SDG13/Freie Arbeit/SDG13_FreieArbeit\";\r\n/**                             Gutes Beispiel                               */\r\n/**                               Infotext                                   */\r\n\r\n/**                                 Quiz                                     */\r\n\r\n/**                                Spiel                                     */\r\n/**                                Spiel2                                    */\r\n\r\n\r\n/**                                Spiel2                                    */\r\n\r\nimport { TextComponent } from \"./Components/Text/TextComponent\";\r\nimport { SDG13_Spiel_Tutorial } from \"./SDG/SDG13/Spiel/SDG13_Spiel_Tutorial\";\r\n\r\nimport { play13 }  from \"./SDG/SDG13/Spiel/play\";\r\nimport { akw }  from \"./SDG/SDG13/Spiel/information/akw\";\r\nimport { cow }  from \"./SDG/SDG13/Spiel/information/cow\";\r\nimport { bicycle } from \"./SDG/SDG13/Spiel/information/bicycle\";\r\nimport { windTurbine }  from \"./SDG/SDG13/Spiel/information/windTurbine\";\r\nimport { tractor } from \"./SDG/SDG13/Spiel/information/tractor\";\r\nimport { tree }  from \"./SDG/SDG13/Spiel/information/tree\";\r\nimport { foxHedgehog }  from \"./SDG/SDG13/Spiel/information/foxHedgehog\";\r\nimport { SDG13_GutesBeispiel } from \"./SDG/SDG13/Gute Bsp/SDG13_GutesBeispiel\";\r\n\r\nexport const App = (): JSX.Element => {\r\n    window.open(\"\", '_self' )\r\n    return (\r\n        <HashRouter basename=\"\">\r\n            <Switch> \r\n                <Route exact path=\"/\"><TextComponent sdg={SDG13_GutesBeispiel}/></Route>\r\n            </Switch>\r\n    </HashRouter>\r\n);}","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter> \r\n        <App />\r\n        </HashRouter>\r\n       \r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Infotextbutton_pushable__kPiIO\",\"shadow\":\"Infotextbutton_shadow__2iGc8\",\"edge\":\"Infotextbutton_edge__1hqmf\",\"edgegreen\":\"Infotextbutton_edgegreen__3vo3E\",\"edgeorange\":\"Infotextbutton_edgeorange__3fUqJ\",\"front\":\"Infotextbutton_front__FXPzh\",\"buttontext\":\"Infotextbutton_buttontext__2b-UB\"};"],"sourceRoot":""}