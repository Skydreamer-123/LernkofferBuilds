{"version":3,"sources":["SDG/Vorlagen/Endscreen/Endscreen.tsx","Components/Quiz/Button/QuizButton.tsx","Components/Modal/ModalComponent.tsx","Components/Buttons/InfotextButton.tsx","Components/Buttons/FancyButton.tsx","Components/Quiz/QuizComponent.tsx","SDG/SDG13/Quiz/SDG13_Quiz.tsx","SDGLogos/Goal-SDG13.png","App.tsx","reportWebVitals.ts","index.tsx","styles/Infotextbutton.module.css"],"names":["Endscreen","useState","qrscan","setQrscan","style","marginTop","delay","onError","err","console","error","onScan","data","value","validator","isURL","window","open","height","width","TextareaAutosize","fontSize","rowsMax","defaultValue","QuizButton","props","ButtonStyle","marginLeft","marginRight","float","background","borderColor","borderWidth","borderRadius","active","styleDiv","id","type","className","onClick","display","justifyContent","alignItems","maxWidth","maxHeight","maxInlineSize","size","content","ModalQuizComponent","isOpen","modalIsOpen","onRequestClose","setIsOpen","overlayClassName","base","afterOpen","beforeClose","closeTimeoutMS","answercw","bottom","incrementCount","setSelectedItem","margin","answer","InfotextButton","version","backgroundColor","cssStyle","pushable","disabled","shadow","edgegreen","edge","front","buttontext","children","FancyButton","Quiz_Component","React","showtext","setText","itemSelected","maxSlides","Object","keys","sdg","isQuizActive","length","prevState","answerCW","answerNumbersLeft","answerNumbersRight","question","explanation","buttonLeft","buttonLeftContent","buttonRight","buttonRightContent","buttonCheck","left","transform","position","buttonBack","buttonNext","right","buttonEnd","to","Modal","sdgTitle","alt","src","logo","padding","textAlign","tile","text","SDG13_Quiz","sdgNumber","1","2","3","4","5","6","7","8","9","10","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7f17c9fe.chunk.js","sourcesContent":["// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React,  { useState } from 'react'\nimport { Fab, TextareaAutosize } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QrScan from 'react-qr-reader'\nimport validator from 'validator'\n\nexport const Endscreen = (): JSX.Element => {\n\n    const [qrscan, setQrscan] = useState('No result');\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const validate = (value) => {\n    \n        if (validator.isURL(value)) {\n            window.open(value,\"_self\")\n        } \n      }\n    const handleScan = (data) => {\n        if (data) {\n            setQrscan(data)\n            validate(data)\n        }\n    }\n    \n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const handleError = err => {\n    console.error(err)\n    }\n\n    return (\n      <div>\n    \n            <span>QR Scanner</span>\n            \n            \n            <div style={{ marginTop:30 }}>\n                <QrScan\n                    delay={300}\n                    onError={handleError}\n                    onScan={handleScan}\n                    style={{ height: 240, width: 320 }}\n                />\n            </div>\n            \n\n            <TextareaAutosize\n                style={{ fontSize:18, width:320, height:100, marginTop:100 }}\n                rowsMax={4}\n                defaultValue={qrscan}\n                value={qrscan}\n            />\n\n      </div>\n    );\n  }\n  \n","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n\r\nimport { CSSProperties } from \"@material-ui/styles\";\r\n\r\n/* eslint-disable react/require-default-props */\r\ninterface QuizButtonProps{\r\n    content: JSX.Element;\r\n    id: string \r\n    float;\r\n    className: string;\r\n    onClick: () => void;\r\n    active: boolean;\r\n    styleDiv?:CSSProperties;\r\n\r\n}\r\n\r\nexport const QuizButton = (props: QuizButtonProps):JSX.Element => {\r\n    const ButtonStyle: CSSProperties = {\r\n        marginLeft: \"5vw\",\r\n        marginRight: \"5vw\",\r\n        marginTop: \"6vh\",\r\n        float: props.float,\r\n        background: \"none\",\r\n        borderColor: \"blue\",\r\n        borderWidth: \"11px\",\r\n        borderRadius: \"15px\",\r\n    }\r\n    const maxWith: CSSProperties = {\r\n        maxWidth: \"35vw\",\r\n        maxHeight: \"66vh\",\r\n        marginTop: \"45px\",\r\n        fontSize: \"20vh\",\r\n        maxInlineSize:\"35vw\",\r\n        size:\"40%\"\r\n    };\r\n\r\n    const active = props.active ?? true;\r\n    if (active)\r\n    {\r\n        return (\r\n            <div style= {props.styleDiv}>\r\n                <button\r\n                    id = {props.id}\r\n                    type=\"button\"\r\n                    style={ButtonStyle}\r\n                    className={props.className}\r\n                    onClick={() => props.onClick()}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: \"25vw\",\r\n                            height: \"25vw\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <div style={maxWith}>\r\n                        {props.content}\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <button className=\"buttonInvisible\" type=\"button\">\r\n            {\" \"}\r\n        </button>\r\n\r\n    );\r\n\r\n}","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/no-unused-prop-types */\r\n\r\nimport * as React from \"react\";\r\nimport \"../../styles/colour_sdgs.css\";\r\nimport \"../../styles/App.css\";\r\nimport \"../../styles/component.css\";\r\nimport Modal from \"react-modal\";\r\nimport { ModalProps } from \"../../Interfaces/SDG\";\r\n\r\nexport const ModalQuizComponent = (props: ModalProps): JSX.Element => {\r\n\r\n    function closeModal(): void {\r\n        props.incrementCount();\r\n        props.setSelectedItem(0);\r\n        props.setIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={props.modalIsOpen}\r\n                onRequestClose={() => props.setIsOpen(false)}\r\n                overlayClassName={{\r\n                    base: \"overlay-base\",\r\n                    afterOpen: \"overlay-after\",\r\n                    beforeClose: \"overlay-before\",\r\n                }}\r\n                className={{\r\n                    base: \"content-base\",\r\n                    afterOpen: \"content-after\",\r\n                    beforeClose: \"content-before\",\r\n                }}\r\n                closeTimeoutMS={500}\r\n            >\r\n                <div className=\"content-header\">\r\n                    {props.answercw}\r\n                    <button type=\"button\" style={{ bottom:\"60px\" }} className=\"personCheckOkButtonComp\"  onClick={() => closeModal()}>\r\n                        <b>Okay</b>\r\n                    </button>\r\n                </div>\r\n                <p style={{ fontSize: \"4vh\", margin: \"10px\" }}>\r\n                    {\" \"}\r\n                    <b>Antwort: </b>\r\n                    {props.answer}{\" \"}\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\nimport React from \"react\";\r\nimport cssStyle from \"../../styles/Infotextbutton.module.css\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n    version: \"green\" | \"red\";\r\n}\r\n\r\nexport const InfotextButton = (props: React.PropsWithChildren<Props>): JSX.Element => {\r\n    const style = props.version === \"green\" ? { backgroundColor: \"green\" } : {};\r\n\r\n    return (\r\n        <button className={cssStyle.pushable} type=\"button\" onClick={props.onClick} disabled={props.disabled}>\r\n            <span className={cssStyle.shadow} />\r\n            <span className={props.version === \"green\" ? cssStyle.edgegreen : cssStyle.edge} />\r\n            <span className={cssStyle.front} style={style}>\r\n                <p className={cssStyle.buttontext}>{props.children}</p>\r\n            </span>\r\n        </button>\r\n    );\r\n};","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\n\r\nimport React, { PropsWithChildren } from \"react\";\r\nimport { InfotextButton } from \"./InfotextButton\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    active?: boolean;\r\n    version?: \"green\" | \"red\";\r\n    className?: string;\r\n}\r\n\r\nexport const FancyButton = (props: PropsWithChildren<Props>): JSX.Element => {\r\n    const active = props.active ?? true;\r\n    const version = props.version ?? \"green\";\r\n    if (active) {\r\n        return (\r\n            <div className={props.className}>\r\n                <InfotextButton onClick={props.onClick} version={version}>\r\n                    {props.children}\r\n                </InfotextButton>\r\n            </div>\r\n        );\r\n    }\r\n    return <div className=\"buttonInvisible\" />;\r\n};","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable unicorn/filename-case */\r\n\r\nimport * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { QuizProps } from \"../../Interfaces/SDG\";\r\nimport { QuizButton } from \"./Button/QuizButton\";\r\nimport { ModalQuizComponent } from \"../Modal/ModalComponent\";\r\nimport { FancyButton } from \"../Buttons/FancyButton\";\r\nimport \"../../styles/quizComponentStyle.css\";\r\n\r\ninterface Props {\r\n    sdg: QuizProps;\r\n}\r\n\r\n// orientiert an 04 Quiz\r\nexport const Quiz_Component = (props: Props): JSX.Element => {\r\n    const [showtext, setText] = React.useState(1);\r\n    const [itemSelected, setSelectedItem] = React.useState(0);\r\n    const [modalIsOpen, setIsOpen] = React.useState(false);\r\n    const maxSlides = Object.keys(props.sdg.isQuizActive).length;\r\n\r\n    const textBox:React.CSSProperties = {\r\n        padding: \"4vw\",\r\n        textAlign: \"center\",\r\n    };\r\n        \r\n    const incrementCount = (): void => {\r\n        setText((prevState) => prevState + 1);\r\n    };\r\n\r\n    const decrementCount = (): void => {\r\n        setText((prevState) => prevState - 1);\r\n    };\r\n\r\n    const openModal = (): void => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const answerCW =\r\n        itemSelected === 0 ? (\r\n            <p>Falsch</p>\r\n        ) : (itemSelected === 1 ? (\r\n            <p>{props.sdg.answerNumbersLeft[showtext]}</p>\r\n        ) : (\r\n            <p>{props.sdg.answerNumbersRight[showtext]}</p>\r\n        ));\r\n\r\n    const answer = (\r\n        <p style={{ fontSize: \"40px\" }}>\r\n            {\" \"}\r\n            <b>Antwort:</b>\r\n            {props.sdg.explanation[showtext]}{\" \"}\r\n        </p>\r\n    );\r\n\r\n    const question =\r\n        props.sdg.isQuizActive[showtext] === true ? (\r\n            <p className=\"quizComponentQuestion\">{props.sdg.question[showtext]}</p>\r\n        ) : (\r\n            <div> </div>\r\n        );\r\n\r\n    const buttonLeftOnClick = (): void => {\r\n        setSelectedItem(1);\r\n    };\r\n    const buttonLeft = (\r\n        <QuizButton\r\n            id=\"left\"\r\n            content={props.sdg.buttonLeftContent[showtext]}\r\n            float=\"left\"\r\n            className={itemSelected === 1 ? \"selectedPerson\" : \"\"}\r\n            active={props.sdg.isQuizActive[showtext] === true}\r\n            onClick={buttonLeftOnClick}\r\n        />\r\n    );\r\n\r\n    const buttonRightOnClick = (): void => {\r\n        setSelectedItem(2);\r\n    };\r\n    const buttonRight = (\r\n        <QuizButton\r\n            id=\"right\"\r\n            content={props.sdg.buttonRightContent[showtext]}\r\n            float=\"right\"\r\n            className={itemSelected === 2 ? \"selectedPerson\" : \"\"}\r\n            active={props.sdg.isQuizActive[showtext] === true}\r\n            onClick={buttonRightOnClick}\r\n        />\r\n    );\r\n\r\n    const buttonCheck = (\r\n        <div style={{ bottom: \"38px\" , left:\"50%\", transform:\"translate(-50%,0)\", position: \"absolute\" }}>\r\n            <FancyButton\r\n                onClick={openModal}\r\n                version=\"green\"\r\n                className=\"checkButton\"\r\n                active={props.sdg.isQuizActive[showtext] === true}\r\n            >\r\n                Überprüfen\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n\r\n    const buttonBack = (\r\n        <div style={{ bottom: \"38px\", left: \"-38px\", position: \"fixed\"  }}>\r\n            <FancyButton\r\n                onClick={decrementCount}\r\n                version=\"red\"\r\n                className=\"backbutton\"\r\n                active={props.sdg.isQuizActive[showtext] === false && showtext>1}\r\n            >\r\n                Zurück\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n    const buttonNext = (\r\n        <div style={{ bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={incrementCount}\r\n                version=\"green\"\r\n                className=\"nextbutton\"\r\n                active={props.sdg.isQuizActive[showtext] === false&& showtext !== maxSlides}\r\n            >\r\n                Weiter\r\n            </FancyButton>\r\n        </div>\r\n\r\n    );\r\n\r\n    const buttonEnd = (\r\n        <Link to=\"/Vorlagen/Endscreen\">\r\n            <div style={{ bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n                <FancyButton\r\n                    onClick={incrementCount}\r\n                    version=\"green\"\r\n                    className=\"nextbutton\"\r\n                    active={showtext === maxSlides && props.sdg.isQuizActive[showtext] === false}\r\n                >\r\n                    Beenden\r\n                </FancyButton>\r\n           </div>\r\n        </Link>\r\n    );\r\n\r\n    const Modal =\r\n        modalIsOpen === true ? (\r\n            <ModalQuizComponent\r\n                incrementCount={incrementCount}\r\n                answercw={answerCW}\r\n                setSelectedItem={setSelectedItem}\r\n                modalIsOpen={modalIsOpen}\r\n                setIsOpen={setIsOpen}\r\n                answer={props.sdg.explanation[showtext]}\r\n            />\r\n        ) : (\r\n            <div> </div>\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <div className={`colour_${props.sdg.sdg}_header`}>\r\n                <div className=\"header\">\r\n                    {props.sdg.sdgTitle} <img className=\"sdglogo\" alt=\"logo\" src={props.sdg.logo} />\r\n                </div>\r\n            </div>\r\n\r\n            {props.sdg.isQuizActive[showtext] === false ? (\r\n            <div style = {textBox}>\r\n            <p className=\"headertext\">\r\n                <b>{props.sdg.tile[showtext]}</b>\r\n            </p>{\" \"}\r\n            <br />\r\n            <p className=\"texttext\">\r\n                <p>{props.sdg.text[showtext]}</p>\r\n            </p>{\" \"}\r\n        </div>\r\n                ):(<div> </div>)\r\n            }\r\n\r\n            \r\n\r\n            {question}\r\n            {buttonLeft}\r\n            {buttonRight}\r\n        \r\n            {buttonCheck}\r\n            {Modal}\r\n\r\n            {buttonBack}\r\n            {buttonNext}\r\n            {buttonEnd}\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable @typescript-eslint/object-curly-spacing */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable unicorn/filename-case */ \r\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-ignore\r\nimport Logo from \"../../../SDGLogos/Goal-SDG13.png\";\r\nimport { QuizProps } from \"../../../Interfaces/SDG\";\r\n\r\nexport const SDG13_Quiz:QuizProps = {\r\n    sdgNumber: 13,\r\n    sdgTitle: \"Maßnahmen zum Klimaschutz\",\r\n    sdg: \"SDG13\",\r\n    logo: Logo,\r\n    tile: { \r\n        1: \"Einleitung\",\r\n        2: \"Einleitung\",\r\n        3: \"Erste Frage\",\r\n        4: \"Antwort\",\r\n        5: \"Zweite Frage\",\r\n        6: \"Antwort\",\r\n        7: \"Dritte Frage\",\r\n        8: \"Antwort\",\r\n        9: \"Ideen\",\r\n        10: \"Ideen\",\r\n    },\r\n    text: { 1: <p>Wie du bereits weißt, beschäftigen wir uns aktuell mit dem Klimawandel und was wir selbst tun können, um diesen langsamer zu machen, ihn zu stoppen oder sogar rückgängig zu machen.\r\n            Ein wichtiges Thema hierbei ist der Transport von Dingen und Leuten. Jeder und alles muss zu verschiedenen Orten gelangen und das passiert auf unterschiedliche Arten.\r\n            Im Folgenden darfst du dich entscheiden, welches der genannten Transportmittel mehr Emissionen (Gase, die von vielen Dingen produziert werden, z.B. bei Autos, während der Motor läuft) produziert. Es stehen immer zwei Transportmittel zur Auswahl. \r\n            </p>,\r\n            2: <p>Damit das mehr Spaß macht, spielen wir ein Spiel. Dafür müsst ihr euch drei Ecken oder Orte aussuchen, die ihr nutzen wollt. Diejenigen, die denken, dass Objekt Nummer eins mehr des gefragten Gases produziert, gehen zu Ecke/Ort eins. Diejenigen, die denken, dass Objekt Nummer zwei mehr des gefragten Gases produziert, gehen zu Ecke/Ort zwei und die, die denken, dass beide gleich viel des Gases produzieren, gehen zu Ecke/Ort drei. Nachdem sich alle in eine Ecke/an einen Ort gestellt haben, lest die Lösungen. Vielleicht können auch diejenigen, die sich richtig positioniert haben, den anderen ihre Gedanken erklären und begründen, warum sie sich in genau diese Ecke gestellt haben.</p>,\r\n            3: <p>Produziert ein Pkw (normales Auto) oder ein Flugzeug mehr Treibhausgase?</p>,\r\n            4: <p>Ein Flugzeug produziert mehr davon. Studien zeigen, dass die erzeugt Menge hier ungefähr bei 230 Gramm pro Person pro Kilometer (g/Pkm) liegt, während dieser Wert bei Pkws nur bei 147 liegt.</p>,\r\n            5: <p>Produziert eine Eisenbahn (Fernverkehr) oder eine Straßen-/Stadt-/ und U-Bahn mehr flüchtige Kohlenwasserstoffe (Gase, die sehr instabil sind)?</p>,\r\n            6: <p>Keines der beiden Transportmittel produziert diese Gase.</p>,\r\n            7: <p>Produziert ein Pkw oder ein Linienbus mehr Kohlenstoffdioxid?</p>,\r\n            8: <p>Das Auto ist hier richtig. Dieses produziert ungefähr 1,00 g/Pkm während dieser Wert bei Linienbussen bei etwa 0,06 g/Pkm liegt.</p>,\r\n            9: <div><p>Ein paar Ideen, die ich toll finde:</p>\r\n            <p>-\tbildet Fahrgemeinschaften, wenn ihr alle das gleiche oder ein ähnliches Ziel habt</p>\r\n            <p>-\tnutze öffentliche Verkehrsmittel, wann immer es möglich ist</p>\r\n            <p>-\tund wie so oft: versuche lokal oder saisonal zu kaufen, um Transportwege von Waren so kurz wie möglich zu halten</p>\r\n            </div>,\r\n            10: <div><p>-\taußerdem versuche das Fliegen in einem Flugzeug zu vermeiden und reise eher mit einem Zug, auch wenn das länger dauert</p>\r\n            <p>-\twenn du die Möglichkeit hast, in einem Elektroauto oder sogar einem Wasserstoff betriebenen Auto zu fahren, tu das oder hilf diese Technologien zu verbreiten, indem du mit anderen darüber redest oder vielleicht kannst du sogar einmal dazu beitragen, dass diese Technologien für alle Menschen zugänglich sind</p></div>\r\n            },\r\n    question: {},\r\n    buttonLeftContent: {},\r\n    buttonRightContent:{},\r\n    answerNumbersLeft: {},\r\n    answerNumbersRight:{},\r\n    explanation:{},\r\n    // modalContent: <div>Quiz SDG 01</div>,\r\n    isQuizActive: {\r\n        1: false,\r\n        2: false,\r\n        3: false,\r\n        4: false,\r\n        5: false,\r\n        6: false,\r\n        7: false,\r\n        8: false,\r\n        9: false,\r\n        10: false,\r\n    }\r\n        /* eslint-enable unicorn/filename-case */ \r\n        /* eslint-enable react/react-in-jsx-scope */\r\n        /* eslint-enable react/no-unescaped-entities */\r\n        /* eslint-enable @typescript-eslint/object-curly-spacing */\r\n}","export default __webpack_public_path__ + \"static/media/Goal-SDG13.a5a81d4d.png\";","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from \"react\";\r\nimport { HashRouter , Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./styles/App.css\";\r\nimport \"./styles/colour_sdgs.css\";\r\nimport \"./styles/sdg13.css\";\r\nimport \"./styles/sdg14.css\";\r\nimport \"./SDG/SDG1/Spiel/sdg1.css\"\r\nimport \"./styles/infotext.css\"\r\n\r\nimport { Endscreen } from \"./SDG/Vorlagen/Endscreen/Endscreen\";\r\nimport { TextComponent } from \"./Components/Text/TextComponent\";\r\nimport { Quiz_Component } from \"./Components/Quiz/QuizComponent\";\r\nimport { InfotextComponent } from \"./Components/Infotext/InfotextComponent\";\r\nimport { SDG13_Quiz } from \"./SDG/SDG13/Quiz/SDG13_Quiz\";\r\n\r\nexport const App = (): JSX.Element => {\r\n    return (\r\n        <HashRouter basename=\"/lernkoffer\">\r\n            <Switch> \r\n            <Route exact path=\"/\"><Quiz_Component sdg={SDG13_Quiz}/></Route>\r\n            <Route exact path =\"/Vorlagen/endscreen\" component={Endscreen} />\r\n\r\n            </Switch>\r\n    </HashRouter>\r\n);}","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter> \r\n        <App />\r\n        </HashRouter>\r\n       \r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Infotextbutton_pushable__kPiIO\",\"shadow\":\"Infotextbutton_shadow__2iGc8\",\"edge\":\"Infotextbutton_edge__1hqmf\",\"edgegreen\":\"Infotextbutton_edgegreen__3vo3E\",\"edgeorange\":\"Infotextbutton_edgeorange__3fUqJ\",\"front\":\"Infotextbutton_front__FXPzh\",\"buttontext\":\"Infotextbutton_buttontext__2b-UB\"};"],"sourceRoot":""}