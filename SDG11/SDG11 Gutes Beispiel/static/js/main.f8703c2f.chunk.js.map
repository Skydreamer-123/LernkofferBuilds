{"version":3,"sources":["SDG/Vorlagen/Endscreen/Endscreen.tsx","Components/Buttons/InfotextButton.tsx","Components/Buttons/FancyButton.tsx","Components/Text/TextComponent.tsx","SDGLogos/Goal-SDG11.png","SDG/SDG11/Gute Bsp/unknown.png","SDG/SDG11/Gute Bsp/unknown1.jpg","SDG/SDG11/Gute Bsp/unknows5.jpg","SDG/SDG11/Gute Bsp/unknown2.png","SDG/SDG11/Gute Bsp/unknown6.jpg","SDG/SDG11/Gute Bsp/unknown3.jpg","SDG/SDG11/Gute Bsp/unknown4.jpg","SDG/SDG11/Gute Bsp/SDG11_GB.tsx","App.tsx","reportWebVitals.ts","index.tsx","styles/Infotextbutton.module.css"],"names":["Endscreen","useState","qrscan","setQrscan","style","marginTop","delay","onError","err","console","error","onScan","data","value","validator","isURL","window","open","height","width","TextareaAutosize","fontSize","rowsMax","defaultValue","InfotextButton","props","version","backgroundColor","className","cssStyle","pushable","type","onClick","disabled","shadow","edgegreen","edge","front","buttontext","children","FancyButton","active","TextComponent","React","showtext","setText","maxSlides","Object","keys","sdg","text","length","incrementCount","prevState","buttonBack","bottom","left","position","buttonNext","right","buttonEnd","to","sdgTitle","alt","src","logo","padding","textAlign","header","SDG11_GB","sdgNumber","Logo","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","display","margin","Schritt1","Schritt2","Schritt3","Schritt4_1","Schritt4_2","Schritt5_1","Schritt5_2","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f8703c2f.chunk.js","sourcesContent":["// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React,  { useState } from 'react'\nimport { Fab, TextareaAutosize } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QrScan from 'react-qr-reader'\nimport validator from 'validator'\n\nexport const Endscreen = (): JSX.Element => {\n\n    const [qrscan, setQrscan] = useState('No result');\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const validate = (value) => {\n    \n        if (validator.isURL(value)) {\n            window.open(value,\"_self\")\n        } \n      }\n    const handleScan = (data) => {\n        if (data) {\n            setQrscan(data)\n            validate(data)\n        }\n    }\n    \n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const handleError = err => {\n    console.error(err)\n    }\n\n    return (\n      <div>\n    \n            <span>QR Scanner</span>\n            \n            \n            <div style={{ marginTop:30 }}>\n                <QrScan\n                    delay={300}\n                    onError={handleError}\n                    onScan={handleScan}\n                    style={{ height: 240, width: 320 }}\n                />\n            </div>\n            \n\n            <TextareaAutosize\n                style={{ fontSize:18, width:320, height:100, marginTop:100 }}\n                rowsMax={4}\n                defaultValue={qrscan}\n                value={qrscan}\n            />\n\n      </div>\n    );\n  }\n  \n","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\nimport React from \"react\";\r\nimport cssStyle from \"../../styles/Infotextbutton.module.css\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n    version: \"green\" | \"red\";\r\n}\r\n\r\nexport const InfotextButton = (props: React.PropsWithChildren<Props>): JSX.Element => {\r\n    const style = props.version === \"green\" ? { backgroundColor: \"green\" } : {};\r\n\r\n    return (\r\n        <button className={cssStyle.pushable} type=\"button\" onClick={props.onClick} disabled={props.disabled}>\r\n            <span className={cssStyle.shadow} />\r\n            <span className={props.version === \"green\" ? cssStyle.edgegreen : cssStyle.edge} />\r\n            <span className={cssStyle.front} style={style}>\r\n                <p className={cssStyle.buttontext}>{props.children}</p>\r\n            </span>\r\n        </button>\r\n    );\r\n};","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\n\r\nimport React, { PropsWithChildren } from \"react\";\r\nimport { InfotextButton } from \"./InfotextButton\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    active?: boolean;\r\n    version?: \"green\" | \"red\";\r\n    className?: string;\r\n}\r\n\r\nexport const FancyButton = (props: PropsWithChildren<Props>): JSX.Element => {\r\n    const active = props.active ?? true;\r\n    const version = props.version ?? \"green\";\r\n    if (active) {\r\n        return (\r\n            <div className={props.className}>\r\n                <InfotextButton onClick={props.onClick} version={version}>\r\n                    {props.children}\r\n                </InfotextButton>\r\n            </div>\r\n        );\r\n    }\r\n    return <div className=\"buttonInvisible\" />;\r\n};","import { CSSProperties } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextProps } from \"../../Interfaces/SDG\";\r\nimport { FancyButton } from \"../Buttons/FancyButton\";\r\n\r\ninterface Props {\r\n    sdg: TextProps;\r\n}\r\n\r\nexport const TextComponent = (props: Props): JSX.Element => {\r\n    const [showtext, setText] = React.useState(1);\r\n    const maxSlides = Object.keys(props.sdg.text).length;\r\n\r\n    const textBox:CSSProperties = {\r\n    padding: \"4vw\",\r\n    textAlign: \"center\",\r\n    };\r\n\r\n    const incrementCount = (): void => {\r\n        setText((prevState) => prevState + 1);\r\n    };\r\n\r\n    const decrementCount = (): void => {\r\n        setText((prevState) => prevState - 1);\r\n    };\r\n\r\n    const buttonBack = (\r\n        <div style={{ bottom: \"38px\", left: \"-38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={decrementCount}\r\n                version=\"red\"\r\n                className=\"backbutton\"\r\n                active={showtext>1}\r\n            >\r\n                Zurück\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n    const buttonNext = (\r\n        <div style={{ bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={incrementCount}\r\n                version=\"green\"\r\n                className=\"nextbutton\"\r\n                active={showtext < maxSlides}\r\n            >\r\n                Weiter\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n\r\n    const buttonEnd = (\r\n        <Link to=\"/Vorlagen/Endscreen\">\r\n            <div style={{  bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n                <FancyButton\r\n                    onClick={incrementCount}\r\n                    version=\"green\"\r\n                    className=\"nextbutton\"\r\n                    active={showtext === maxSlides}\r\n                >\r\n                    Beenden\r\n                </FancyButton>\r\n            </div>\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={`colour_${props.sdg.sdg}_header`}>\r\n                <div className=\"header\">\r\n                    {props.sdg.sdgTitle} <img className=\"sdglogo\" alt=\"logo\" src={props.sdg.logo} />\r\n                </div>\r\n            </div>\r\n            <div style = {textBox}>\r\n                <p className=\"headertext\">\r\n                    <b>{props.sdg.header[showtext]}</b>\r\n                </p>{\" \"}\r\n                <br />\r\n                <p className=\"texttext\">\r\n                    <p>{props.sdg.text[showtext]}</p>\r\n                </p>{\" \"}\r\n            </div>\r\n            {buttonBack}\r\n            {buttonNext}\r\n            {buttonEnd}\r\n            \r\n        </>\r\n\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Goal-SDG11.884c794e.png\";","export default __webpack_public_path__ + \"static/media/unknown.fca69eac.png\";","export default __webpack_public_path__ + \"static/media/unknown1.c1bbf23d.jpg\";","export default __webpack_public_path__ + \"static/media/unknows5.071a893c.jpg\";","export default __webpack_public_path__ + \"static/media/unknown2.4bfa8a89.png\";","export default __webpack_public_path__ + \"static/media/unknown6.e4b8cff0.jpg\";","export default __webpack_public_path__ + \"static/media/unknown3.47a45f59.jpg\";","export default __webpack_public_path__ + \"static/media/unknown4.3ca2a018.jpg\";","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable unicorn/filename-case */\r\n// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/react-in-jsx-scope */\r\n\r\nimport { TextProps } from \"../../../Interfaces/SDG\";\r\nimport Logo from \"../../../SDGLogos/Goal-SDG11.png\";\r\n\r\nimport Schritt1 from \"./unknown.png\";\r\nimport Schritt2 from \"./unknown1.jpg\";\r\nimport Schritt3 from \"./unknows5.jpg\";\r\nimport Schritt4_1 from \"./unknown2.png\";\r\nimport Schritt4_2 from \"./unknown6.jpg\";\r\nimport Schritt5_1 from \"./unknown3.jpg\";\r\nimport Schritt5_2 from \"./unknown4.jpg\";\r\n\r\nexport const SDG11_GB: TextProps = {\r\n    sdgNumber: 11,\r\n    sdgTitle: \"Insektenhotel\",\r\n    sdg: \"SDG11\",\r\n    logo: Logo,\r\n    header: {\r\n        1: \"Anmerkung zum Bemalen der Dose:\",\r\n        2: \"Anmerkung zum Bemalen der Dose:\",\r\n        3: \"Schritt 1:\",\r\n        4: \"Schritt 1:\",\r\n        5: \"Schritt 1:\",\r\n        6: \"Schritt 2:\",\r\n        7: \"Schritt 2:\",\r\n        8: \"Schritt 3:\",\r\n        9: \"Schritt 3:\",\r\n        10: \"Schritt 4:\",\r\n        11: \"Schritt 4:\",\r\n        12: \"Schritt 4:\",\r\n        13: \"Schritt 5:\",\r\n        14: \"Schritt 5:\",\r\n        15: \"Schritt 5:\",\r\n        16: \"Schritt 5:\",\r\n        17: \"Schritt 5:\",\r\n\r\n\r\n\r\n    },\r\n\r\n    text: {\r\n        1: (\r\n            <div>\r\n                {\" \"}\r\n                Es gibt viele Möglichkeiten, wie dein Insektenhotel am Ende aussehen könnte. Eine davon ist es wie eine\r\n                Biene oder ein anderes Tier, das du magst, aussehen zu lassen. Aber natürlich kannst du es auch ganz\r\n                einfach halten und die Dose nur in einer Farbe oder gar nicht bemalen. Mach es einfach so, wie es dir am\r\n                besten gefällt und vor allem auch so, wie es am besten für dich möglich ist.\r\n            </div>\r\n        ),\r\n        2: (\r\n            <div>\r\n                {\" \"}\r\n                Aber wenn du nur eine Farbe nutzen möchtest, dann wäre weiß am besten, weil es das Sonnenlicht\r\n                reflektieren (zurückwerfen) würde und die Farbe, die du nicht nutzen solltest, ist schwarz. Diese würde\r\n                das Sonnenlicht nämlich aufnehmen und dann wird es in der Dose sehr heiß, was schlecht für die Tiere\r\n                innerhalb des Hotels ist.\r\n            </div>\r\n        ),\r\n        3: (\r\n            <div>\r\n                Zuerst solltest du all das benötigte Material vorbereiten. Das wäre:\r\n                <ul>\r\n                    <li> <b> - Eine Dose </b> (am besten machst du diese vorher grob sauber)</li>\r\n                    <li> <b> - Ein Draht </b> </li>\r\n                    <li>\r\n                        {\" \"}\r\n                        - Und natürlich die Füllung:  <b> Bambus </b> (wenn du das nicht findest, dann nimm einfach andere hohle\r\n                        Äste oder lass diese weg), <b> zusammengerolltes Papier </b>, <b>Holzwolle </b> , <b> Stroh </b>, <b> dünne Äste </b>, <b>Tannenzapfen\r\n                        oder andere Sachen </b>, die deiner Meinung nach gut wären (Tipp: nimm unterschiedliche Materialien,\r\n                        damit verschiedene Tiere dein Hotel nutzen können)\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        ),\r\n        4: (\r\n            <div>\r\n                <ul>\r\n                    <li> <b> - Ein Nagel und ein Hammer </b> </li>\r\n                    <li>\r\n                        {\" \"}\r\n                        <b> - Optional: </b> Farbe oder Wolle, um es bunter zu machen und/oder Fäden und Perlen oder Knöpfe (zum\r\n                        Beispiel, wenn du es wie ein Tier gestalten möchtest, das Beine hat)\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        ),\r\n        5: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt1} alt=\"\" />,\r\n        6: (\r\n            <div>\r\n                Nimm die Dose und bemale sie mit der Farbe oder wickle die Wolle herum. Wenn du es einfach halten\r\n                möchtest oder nichts dergleichen zur Hand hast, dann überspringe diesen Schritt einfach.\r\n            </div>\r\n        ),\r\n        7: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt2} alt=\"\" />,\r\n\r\n        8: (\r\n            <div>\r\n                Am besten lässt du dir hier von einem Erwachsenen helfen: Nimm den Hammer und den Nagel und mache damit\r\n                ein Loch in den Boden der Dose (Wenn du ein Tier mit Beinen gestalten möchtest, dann mach noch ein paar\r\n                Löcher in die Dose, durch die du Fäden fädelst und an die Enden Knöpfe oder Perlen knotest).\r\n            </div>\r\n        ),\r\n        9: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt3} alt=\"\" />,\r\n        10: (\r\n            <div>\r\n                Nimm nun den Draht und fädle ihn durch das offene Ende der Dose und das Loch, was du gerade mit dem\r\n                Nagel gemacht hast. Wenn du damit fertig bist, knote die Enden über der Dose zusammen. Benutze hier ein\r\n                wenig mehr Draht, weil das dann die Schlaufe wird, an der das Hotel aufgehängt werden soll.\r\n            </div>\r\n        ),\r\n        11: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt4_1} alt=\"\" />,\r\n        12: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt4_2} alt=\"\" />,\r\n        13: (\r\n            <div>\r\n                Nimm nun das Füllmaterial und fülle damit die Dose. Achte dabei darauf, dass du genug benutzt, sonst\r\n                wird es zu locker und alles fällt wieder heraus, wenn der Wind ein bisschen geht.\r\n                \r\n                \r\n            </div>\r\n        ),\r\n        14: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt5_1} alt=\"\" />,\r\n        15: <img style={{ display:\"block\", margin:\"auto\" }} src={Schritt5_2} alt=\"\" />,\r\n        16: (\r\n            <div>\r\n                Nachdem dein Insektenhotel jetzt fertig ist, nimm es und suche dir einen guten Platz in der Natur (Tipp:\r\n                ein guter Platz ist immer in einem Baum).\r\n            </div>\r\n        ),\r\n    },\r\n};\r\n","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from \"react\";\r\nimport { HashRouter , Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./styles/App.css\";\r\nimport \"./styles/colour_sdgs.css\";\r\nimport \"./styles/sdg13.css\";\r\nimport \"./styles/sdg14.css\";\r\nimport \"./SDG/SDG1/Spiel/sdg1.css\"\r\nimport \"./styles/infotext.css\"\r\n\r\nimport { Endscreen } from \"./SDG/Vorlagen/Endscreen/Endscreen\";\r\nimport { TextComponent } from \"./Components/Text/TextComponent\";\r\nimport { Quiz_Component } from \"./Components/Quiz/QuizComponent\";\r\nimport { InfotextComponent } from \"./Components/Infotext/InfotextComponent\";\r\nimport { SDG11_GB } from \"./SDG/SDG11/Gute Bsp/SDG11_GB\";\r\n\r\nexport const App = (): JSX.Element => {\r\n    return (\r\n        <HashRouter basename=\"/lernkoffer\">\r\n            <Switch> \r\n            <Route exact path=\"/\"><TextComponent sdg= {SDG11_GB}/> </Route> \r\n            <Route exact path =\"/Vorlagen/endscreen\" component={Endscreen} />\r\n\r\n            </Switch>\r\n    </HashRouter>\r\n);}","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter> \r\n        <App />\r\n        </HashRouter>\r\n       \r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Infotextbutton_pushable__kPiIO\",\"shadow\":\"Infotextbutton_shadow__2iGc8\",\"edge\":\"Infotextbutton_edge__1hqmf\",\"edgegreen\":\"Infotextbutton_edgegreen__3vo3E\",\"edgeorange\":\"Infotextbutton_edgeorange__3fUqJ\",\"front\":\"Infotextbutton_front__FXPzh\",\"buttontext\":\"Infotextbutton_buttontext__2b-UB\"};"],"sourceRoot":""}