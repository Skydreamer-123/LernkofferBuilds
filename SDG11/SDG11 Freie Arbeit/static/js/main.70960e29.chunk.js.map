{"version":3,"sources":["SDG/Vorlagen/Endscreen/Endscreen.tsx","Components/Buttons/InfotextButton.tsx","Components/Buttons/FancyButton.tsx","Components/Text/TextComponent.tsx","SDGLogos/Goal-SDG11.png","SDG/SDG11/Freie Arbeit/Bild1.png","SDG/SDG11/Freie Arbeit/SDG11_FreieArbeit.tsx","App.tsx","reportWebVitals.ts","index.tsx","styles/Infotextbutton.module.css"],"names":["Endscreen","useState","qrscan","setQrscan","style","marginTop","delay","onError","err","console","error","onScan","data","value","validator","isURL","window","open","height","width","TextareaAutosize","fontSize","rowsMax","defaultValue","InfotextButton","props","version","backgroundColor","className","cssStyle","pushable","type","onClick","disabled","shadow","edgegreen","edge","front","buttontext","children","FancyButton","active","TextComponent","React","showtext","setText","maxSlides","Object","keys","sdg","text","length","incrementCount","prevState","buttonBack","bottom","left","position","buttonNext","right","buttonEnd","to","sdgTitle","alt","src","logo","padding","textAlign","header","SDG11_FreieArbeit","sdgNumber","Logo","1","2","3","4","marginBottom","marginLeft","Stadt","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.70960e29.chunk.js","sourcesContent":["// eslint-disable-next-line eslint-comments/disable-enable-pair\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React,  { useState } from 'react'\nimport { Fab, TextareaAutosize } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QrScan from 'react-qr-reader'\nimport validator from 'validator'\n\nexport const Endscreen = (): JSX.Element => {\n\n    const [qrscan, setQrscan] = useState('No result');\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const validate = (value) => {\n    \n        if (validator.isURL(value)) {\n            window.open(value,\"_self\")\n        } \n      }\n    const handleScan = (data) => {\n        if (data) {\n            setQrscan(data)\n            validate(data)\n        }\n    }\n    \n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const handleError = err => {\n    console.error(err)\n    }\n\n    return (\n      <div>\n    \n            <span>QR Scanner</span>\n            \n            \n            <div style={{ marginTop:30 }}>\n                <QrScan\n                    delay={300}\n                    onError={handleError}\n                    onScan={handleScan}\n                    style={{ height: 240, width: 320 }}\n                />\n            </div>\n            \n\n            <TextareaAutosize\n                style={{ fontSize:18, width:320, height:100, marginTop:100 }}\n                rowsMax={4}\n                defaultValue={qrscan}\n                value={qrscan}\n            />\n\n      </div>\n    );\n  }\n  \n","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\nimport React from \"react\";\r\nimport cssStyle from \"../../styles/Infotextbutton.module.css\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    disabled?: boolean;\r\n    version: \"green\" | \"red\";\r\n}\r\n\r\nexport const InfotextButton = (props: React.PropsWithChildren<Props>): JSX.Element => {\r\n    const style = props.version === \"green\" ? { backgroundColor: \"green\" } : {};\r\n\r\n    return (\r\n        <button className={cssStyle.pushable} type=\"button\" onClick={props.onClick} disabled={props.disabled}>\r\n            <span className={cssStyle.shadow} />\r\n            <span className={props.version === \"green\" ? cssStyle.edgegreen : cssStyle.edge} />\r\n            <span className={cssStyle.front} style={style}>\r\n                <p className={cssStyle.buttontext}>{props.children}</p>\r\n            </span>\r\n        </button>\r\n    );\r\n};","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/require-default-props */\r\n\r\nimport React, { PropsWithChildren } from \"react\";\r\nimport { InfotextButton } from \"./InfotextButton\";\r\n\r\ninterface Props {\r\n    onClick?: () => void;\r\n    active?: boolean;\r\n    version?: \"green\" | \"red\";\r\n    className?: string;\r\n}\r\n\r\nexport const FancyButton = (props: PropsWithChildren<Props>): JSX.Element => {\r\n    const active = props.active ?? true;\r\n    const version = props.version ?? \"green\";\r\n    if (active) {\r\n        return (\r\n            <div className={props.className}>\r\n                <InfotextButton onClick={props.onClick} version={version}>\r\n                    {props.children}\r\n                </InfotextButton>\r\n            </div>\r\n        );\r\n    }\r\n    return <div className=\"buttonInvisible\" />;\r\n};","import { CSSProperties } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextProps } from \"../../Interfaces/SDG\";\r\nimport { FancyButton } from \"../Buttons/FancyButton\";\r\n\r\ninterface Props {\r\n    sdg: TextProps;\r\n}\r\n\r\nexport const TextComponent = (props: Props): JSX.Element => {\r\n    const [showtext, setText] = React.useState(1);\r\n    const maxSlides = Object.keys(props.sdg.text).length;\r\n\r\n    const textBox:CSSProperties = {\r\n    padding: \"4vw\",\r\n    textAlign: \"center\",\r\n    };\r\n\r\n    const incrementCount = (): void => {\r\n        setText((prevState) => prevState + 1);\r\n    };\r\n\r\n    const decrementCount = (): void => {\r\n        setText((prevState) => prevState - 1);\r\n    };\r\n\r\n    const buttonBack = (\r\n        <div style={{ bottom: \"38px\", left: \"-38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={decrementCount}\r\n                version=\"red\"\r\n                className=\"backbutton\"\r\n                active={showtext>1}\r\n            >\r\n                Zur√ºck\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n    const buttonNext = (\r\n        <div style={{ bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n            <FancyButton\r\n                onClick={incrementCount}\r\n                version=\"green\"\r\n                className=\"nextbutton\"\r\n                active={showtext < maxSlides}\r\n            >\r\n                Weiter\r\n            </FancyButton>\r\n        </div>\r\n    );\r\n\r\n    const buttonEnd = (\r\n        <Link to=\"/Vorlagen/Endscreen\">\r\n            <div style={{  bottom: \"38px\", right: \"38px\", position: \"fixed\" }}>\r\n                <FancyButton\r\n                    onClick={incrementCount}\r\n                    version=\"green\"\r\n                    className=\"nextbutton\"\r\n                    active={showtext === maxSlides}\r\n                >\r\n                    Beenden\r\n                </FancyButton>\r\n            </div>\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <div className={`colour_${props.sdg.sdg}_header`}>\r\n                <div className=\"header\">\r\n                    {props.sdg.sdgTitle} <img className=\"sdglogo\" alt=\"logo\" src={props.sdg.logo} />\r\n                </div>\r\n            </div>\r\n            <div style = {textBox}>\r\n                <p className=\"headertext\">\r\n                    <b>{props.sdg.header[showtext]}</b>\r\n                </p>{\" \"}\r\n                <br />\r\n                <p className=\"texttext\">\r\n                    <p>{props.sdg.text[showtext]}</p>\r\n                </p>{\" \"}\r\n            </div>\r\n            {buttonBack}\r\n            {buttonNext}\r\n            {buttonEnd}\r\n            \r\n        </>\r\n\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Goal-SDG11.884c794e.png\";","export default __webpack_public_path__ + \"static/media/Bild1.a00a0afb.png\";","// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable unicorn/filename-case */\r\n// eslint-disable-next-line eslint-comments/disable-enable-pair\r\n/* eslint-disable react/react-in-jsx-scope */\r\n\r\nimport { TextProps } from \"../../../Interfaces/SDG\";\r\nimport Logo from \"../../../SDGLogos/Goal-SDG11.png\";\r\nimport Stadt from \"./Bild1.png\";\r\n\r\nexport const SDG11_FreieArbeit: TextProps = {\r\n    sdgNumber: 11,\r\n    sdgTitle: \"Gestalte deine eigene kleine nachhaltige Stadt\",\r\n    sdg: \"SDG11\",\r\n    logo: Logo,\r\n    header: {\r\n        1: \"Schritt 1: \",\r\n        2: \"Schritt 2: \",\r\n        3: \"Schritt 3: \",\r\n        4: \"L√∂sungsvorschlag\",\r\n    },\r\n\r\n    text: {\r\n        1: (\r\n            <div>\r\n                {\" \"}\r\n                Stelle dir einmal vor, wie eine nachhaltige Stadt f√ºr dich aussehen sollte. Verwende dazu all dein\r\n                gesammeltes Wissen.\r\n            </div>\r\n        ),\r\n        2: (\r\n            <div>\r\n                Nimm nun alle Materialien, mit denen du ein Bild ‚Äûbauen‚Äú m√∂chtest. Als Grundlage solltest du mit einem\r\n                Blatt (die Gr√∂√üe ist ganz dir √ºberlassen) beginnen. Ich habe hier auch gleich ein buntes Papier\r\n                genommen, aber das ist auch dir √ºberlassen. Die Materialien, die du nutzen m√∂chtest, k√∂nnen ganz\r\n                unterschiedlich sein. Du kannst mit verschiedenen Stiften oder Kreiden oder sonstigen Farben malen,\r\n                verschiedene Papier Arten nehmen und Sachen ausschneiden oder falten und dann auf dein Bild kleben. Du\r\n                kannst aber auch ganz andere Sachen noch nutzen, ich habe meine Wolken zum Beispiel aus Watte gemacht.\r\n            </div>\r\n        ),\r\n        3: (\r\n            <div>\r\n                Jetzt, da du dir ausgedacht hast wie deine ideale Stadt aussehen soll und all die ben√∂tigten Materialien\r\n                bereitgelegt hast, kann es los gehen. Fang einfach an zu basteln, kleben, malen, was auch immer dir in\r\n                den Sinn kommt und werde so kreativ wie du m√∂chtest und kannst.\r\n            </div>\r\n        ),\r\n        4: (\r\n            <div>\r\n                Nur ein Beispiel, wie ich mir eine nachhaltige Stadt vorstelle. Wie du sehen kannst, sind hier viele\r\n                Pflanzen und im Hintergrund wird mit Windr√§dern nachhaltig Strom produziert und auch auf den Hausd√§chern\r\n                und dem Bus befinden sich Solarzellen, um gr√ºnen Strom zu produzieren.\r\n                <img style={{ marginBottom: \"-20vw\", marginLeft: \"35.333vw\", height: \"26.667vw\" }} src={Stadt} alt=\"\" />\r\n            </div>\r\n        ),\r\n    },\r\n};\r\n","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React from \"react\";\r\nimport { HashRouter , Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./styles/App.css\";\r\nimport \"./styles/colour_sdgs.css\";\r\nimport \"./styles/sdg13.css\";\r\nimport \"./styles/sdg14.css\";\r\nimport \"./SDG/SDG1/Spiel/sdg1.css\"\r\nimport \"./styles/infotext.css\"\r\n\r\nimport { Endscreen } from \"./SDG/Vorlagen/Endscreen/Endscreen\";\r\nimport { TextComponent } from \"./Components/Text/TextComponent\";\r\nimport { Quiz_Component } from \"./Components/Quiz/QuizComponent\";\r\nimport { InfotextComponent } from \"./Components/Infotext/InfotextComponent\";\r\nimport { SDG11_FreieArbeit } from \"./SDG/SDG11/Freie Arbeit/SDG11_FreieArbeit\";\r\n\r\nexport const App = (): JSX.Element => {\r\n    return (\r\n        <HashRouter basename=\"/lernkoffer\">\r\n            <Switch> \r\n            <Route exact path=\"/\"><TextComponent sdg= {SDG11_FreieArbeit}/> </Route> \r\n            <Route exact path =\"/Vorlagen/endscreen\" component={Endscreen} />\r\n\r\n            </Switch>\r\n    </HashRouter>\r\n);}","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { App } from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter> \r\n        <App />\r\n        </HashRouter>\r\n       \r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Infotextbutton_pushable__kPiIO\",\"shadow\":\"Infotextbutton_shadow__2iGc8\",\"edge\":\"Infotextbutton_edge__1hqmf\",\"edgegreen\":\"Infotextbutton_edgegreen__3vo3E\",\"edgeorange\":\"Infotextbutton_edgeorange__3fUqJ\",\"front\":\"Infotextbutton_front__FXPzh\",\"buttontext\":\"Infotextbutton_buttontext__2b-UB\"};"],"sourceRoot":""}